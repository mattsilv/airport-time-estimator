/* Define spacing variables at the top */
:root {
  --spacing-xs: 0.25rem; /* 4px */
  --spacing-sm: 0.5rem; /* 8px */
  --spacing-md: 0.75rem; /* 12px */
  --spacing-lg: 1rem; /* 16px */
  --font-sm: 0.85em;
  --font-xs: 0.8em;
  --system-font: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto,
    Helvetica, Arial, sans-serif;
  --form-label-margin: 0.5rem;
  --form-group-spacing: 1.25rem;
  --input-height: 38px;
  --label-line-height: 1.2;
  --form-horizontal-padding: 0; /* Remove default padding */
  --bg-primary: #ffffff;
  --bg-secondary: #ffffff;
  --input-bg: #ffffff;
  --input-text: #1c1c1e;
  --input-text-secondary: #1c1c1e;
  --border-color: #d1d5db;
  --label-color: #6b7280;
}

:root.dark-mode {
  --bg-primary: #000000;
  --bg-secondary: #000000;
  --input-bg: #2c2c2e; /* Dark gray for input backgrounds */
  --input-text: #ffffff; /* White text for inputs */
  --input-text-secondary: #e0e0e0;
  --border-color: #2c2c2e;
  --label-color: #e0e0e0;
}

/* Base input styles - must be defined first */
.inputBase {
  height: 38px !important;
  padding: 0 0.75rem !important;
  border: 1px solid var(--border-color);
  border-radius: 4px;
  font-size: 16px !important;
  background-color: var(--input-bg);
  color: var(--input-text);
  width: 100%;
  -webkit-appearance: none;
  -webkit-text-size-adjust: 100%;
  touch-action: manipulation;
  box-sizing: border-box !important;
  line-height: 36px !important;
}

.inputBase:focus {
  outline: none;
  border-color: var(--link-color);
  box-shadow: 0 0 0 1px var(--link-color);
}

/* Shared number input styles */
.numberInputContainer {
  display: flex;
  align-items: center;
}

.numberControl {
  composes: inputBase;
  width: 70px !important;
  min-width: 70px !important;
  max-width: 70px !important;
  text-align: center;
  color: var(--input-text-secondary) !important;
  padding: 0 0.25rem !important;
}

.numberButtonGroup {
  display: flex;
  gap: 0.5rem;
  margin-left: 0.5rem;
}

/* Time input */
.timeInput {
  composes: inputBase;
}

/* Date input */
.dateInput {
  composes: inputBase;
}

/* Override datepicker styles */
:global(.react-datepicker__input-container input) {
  font-family: var(--system-font);
  font-size: 1rem;
  color: var(--input-text) !important;
  height: var(--input-height);
  border-radius: 8px;
  border: 1px solid var(--border-color);
  padding: 0.5rem 0.75rem;
  width: 100%;
  background-color: var(--input-bg) !important;
  -webkit-appearance: none;
}

:global(.react-datepicker__input-container input:focus) {
  outline: none;
  border-color: var(--link-color);
  box-shadow: 0 0 0 1px var(--link-color);
}

.buttonBase {
  width: 32px;
  height: 32px;
  padding: 0;
  font-size: 20px;
  border: none;
  touch-action: manipulation;
  color: white;
}

.decrementButton {
  composes: buttonBase;
  background-color: #ff6b6b !important;
}

.decrementButton:hover,
.decrementButton:active,
.decrementButton:focus {
  background-color: #ff6b6b !important;
  color: white !important;
}

.incrementButton {
  composes: buttonBase;
  background-color: #69db7c !important;
}

.incrementButton:hover,
.incrementButton:active,
.incrementButton:focus {
  background-color: #69db7c !important;
  color: white !important;
}

.anxietyText {
  font-size: var(--font-sm);
  color: #444444;
  text-align: left;
  margin-bottom: var(--spacing-xs);
}

.formLabel {
  font-family: var(--system-font);
  font-size: var(--font-sm);
  color: var(--label-color);
  text-transform: uppercase;
  letter-spacing: 0.5px;
  font-weight: 500;
  margin-bottom: 4px !important;
  padding: 0;
  line-height: 1;
  display: block;
}

.formGroup {
  position: relative;
  margin-bottom: var(--form-group-spacing);
  display: flex;
  flex-direction: column;
}

.formGroup:first-of-type {
  margin-top: var(--spacing-sm);
  margin-bottom: var(--spacing-md);
}

.formGroup:last-of-type {
  margin-top: 0.8rem;
  margin-bottom: 0.8rem;
}

/* Checkbox specific styles */
.formGroup:last-of-type label {
  font-family: var(--system-font);
  font-size: var(--font-xs);
  color: var(--label-color);
  text-transform: none;
  letter-spacing: -0.01em;
  font-weight: 500;
  margin-bottom: var(--spacing-xs);
}

/* Date picker and time input styles */
.dateInput {
  font-family: var(--system-font);
  font-size: 1rem;
  color: #1c1c1e;
  height: var(--input-height);
  border-radius: 8px;
  border: 1px solid #d1d5db;
  padding: 0.5rem 0.75rem;
  padding-right: 2.5rem;
  width: 100%;
  background-color: white;
  -webkit-appearance: none;
}

.dateInput:focus {
  outline: none;
  border-color: #007aff;
  box-shadow: 0 0 0 1px #007aff;
}

/* Apply styles globally to datepicker input */
:global(.react-datepicker__input-container input) {
  font-family: var(--system-font);
  font-size: 1rem;
  color: #1c1c1e;
  height: var(--input-height);
  border-radius: 8px;
  border: 1px solid #d1d5db;
  padding: 0.5rem 0.75rem;
  padding-right: 2.5rem;
  width: 100%;
  background-color: white;
  -webkit-appearance: none;
}

:global(.react-datepicker__input-container input:focus) {
  outline: none;
  border-color: #007aff;
  box-shadow: 0 0 0 1px #007aff;
}

/* Time input styles */
.timeInput {
  font-family: var(--system-font);
  font-size: 1rem;
  color: #1c1c1e;
  height: var(--input-height);
  border-radius: 8px;
  border: 1px solid #d1d5db;
  padding: 0.5rem 0.75rem;
  width: 100%;
  background-color: white;
  -webkit-appearance: none;
}

.timeInput:focus {
  outline: none;
  border-color: #007aff;
  box-shadow: 0 0 0 1px #007aff;
}

/* Checkbox label styles */
.checkboxLabel {
  font-family: var(--system-font);
  font-size: calc(var(--font-xs) * 0.95);
  color: var(--label-color);
  text-transform: none;
  letter-spacing: -0.01em;
  font-weight: 500;
  margin-bottom: var(--spacing-xs);
}

/* Add specific spacing for date input */
.formGroup:nth-last-child(2) {
  /* Targets the date picker group */
  margin-top: var(--spacing-md);
  margin-bottom: var(--spacing-md);
}

.formGroup:nth-last-child(2) .formLabel {
  /* Targets the date picker label */
  margin-bottom: var(--spacing-sm); /* Increased from spacing-xs */
}

.dateGroup {
  display: flex;
  align-items: center;
  gap: 1rem; /* Consistent spacing between label and input */
}

.dateGroup .dateLabel {
  margin-bottom: 0; /* Remove bottom margin when in horizontal layout */
  min-width: 120px; /* Fixed width for alignment */
  padding-top: calc(
    (var(--input-height) - (var(--font-sm) * var(--label-line-height))) / 2
  ); /* Center vertically */
}

.timeAndDateContainer {
  display: flex;
  gap: 1.5rem;
  margin-bottom: var(--form-group-spacing);
}

.timeGroup,
.dateGroup {
  flex: 1;
  position: relative;
}

.timeGroup .formLabel,
.dateGroup .formLabel {
  font-family: var(--system-font);
  font-size: var(--font-sm);
  color: var(--label-color);
  text-transform: uppercase;
  letter-spacing: 0.5px;
  font-weight: 500;
  margin-bottom: var(--spacing-xs);
  display: block;
}

/* Time input specific styles */
.timeInput {
  font-family: var(--system-font);
  font-size: 1rem;
  color: #1c1c1e;
  height: var(--input-height);
  border-radius: 8px;
  border: 1px solid #d1d5db;
  padding: 0.5rem 0.75rem;
  width: 100%;
  background-color: white;
  -webkit-appearance: none;
  margin: 0;
}

/* Date input specific styles */
.dateInput,
:global(.react-datepicker__input-container input) {
  font-family: var(--system-font);
  font-size: 1rem;
  color: #1c1c1e;
  height: var(--input-height);
  border-radius: 8px;
  border: 1px solid #d1d5db;
  padding: 0.5rem 0.75rem;
  padding-right: 2.5rem;
  width: 100%;
  background-color: white;
  -webkit-appearance: none;
}

/* Override global datepicker styles */
:global(.react-datepicker-wrapper),
:global(.react-datepicker__input-container) {
  display: block;
  width: 100%;
}

/* New clean styles */
.timeAndDateContainer {
  display: flex;
  gap: 1.5rem;
  margin-bottom: var(--form-group-spacing);
}

.timeGroup,
.dateGroup {
  flex: 1;
}

/* Base input styles */
.inputBase {
  font-family: var(--system-font);
  font-size: 1rem;
  color: var(--input-text) !important;
  height: var(--input-height);
  border-radius: 8px;
  border: 1px solid var(--border-color);
  padding: 0.5rem 0.75rem;
  width: 100%;
  background-color: var(--input-bg) !important;
  -webkit-appearance: none;
}

.inputBase:focus {
  outline: none;
  border-color: #007aff;
  box-shadow: 0 0 0 1px #007aff;
}

/* Time input */
.timeInput {
  composes: inputBase;
  background-color: var(--input-bg);
  color: var(--input-text);
}

/* Date input */
.dateInput {
  composes: inputBase;
  background-color: var(--input-bg);
  color: var(--input-text);
}

/* Override datepicker styles */
:global(.react-datepicker-wrapper) {
  width: 100%;
}

:global(.react-datepicker__input-container) {
  width: 100%;
}

:global(.react-datepicker__input-container input) {
  font-family: var(--system-font);
  font-size: 1rem;
  color: #1c1c1e;
  height: var(--input-height);
  border-radius: 8px;
  border: 1px solid #d1d5db;
  padding: 0.5rem 0.75rem;
  padding-right: 2.5rem;
  width: 100%;
  background-color: white;
  -webkit-appearance: none;
}

:global(.react-datepicker__input-container input:focus) {
  outline: none;
  border-color: #007aff;
  box-shadow: 0 0 0 1px #007aff;
}

/* Remove any conflicting styles */
.dateGroup .dateLabel,
.formGroup:nth-last-child(2),
.formGroup:nth-last-child(2) .formLabel {
  margin: 0;
  padding: 0;
}

/* Unified label style */
.formLabel {
  display: block;
  font-family: var(--system-font);
  font-size: var(--font-sm);
  color: var(--label-color);
  text-transform: uppercase;
  letter-spacing: 0.5px;
  font-weight: 500;
  margin-bottom: 4px !important;
  padding: 0;
  line-height: 1;
}

/* Force DatePicker wrappers to behave */
:global(.react-datepicker-wrapper),
:global(.react-datepicker__input-container) {
  margin: 0 !important;
  padding: 0 !important;
  display: block !important;
  width: 100% !important;
  line-height: 1 !important;
  position: static !important;
}

/* Unified input styles */
.timeInput,
.dateInput,
:global(.react-datepicker__input-container input) {
  display: block;
  width: 100%;
  height: var(--input-height);
  padding: 0.5rem 0.75rem;
  margin: 0;
  font-family: var(--system-font);
  font-size: 1rem;
  border: 1px solid #d1d5db;
  border-radius: 8px;
  background-color: white;
  color: #1c1c1e;
  -webkit-appearance: none;
  line-height: normal;
}

.dateInputWrapper {
  position: relative;
  width: 100%;
}

.dateInputWrapper::after {
  content: "📅";
  position: absolute;
  right: 12px;
  top: 50%;
  transform: translateY(-50%);
  pointer-events: none;
  opacity: 0.5;
  font-size: 1.1rem;
  line-height: 1;
}

/* Force consistent colors for all number inputs */
input[type="number"] {
  color: var(--input-text-secondary) !important;
}

/* Update form group spacing for reordered elements */
.formGroup:nth-last-child(2) {
  /* Remove specific targeting since groups are reordered */
  margin-top: var(--spacing-md);
  margin-bottom: var(--spacing-md);
}

/* Adjust checkbox group spacing */
.formGroup:last-of-type {
  order: 2; /* Move checkbox after boarding time */
  margin-top: var(--spacing-sm);
  margin-bottom: var(--spacing-lg);
}

/* Adjust date group spacing */
.dateGroup {
  order: 3; /* Move date picker after checkbox */
  margin-top: var(--spacing-md);
}

/* Ensure proper spacing between reordered elements */
.timeAndDateContainer {
  order: 1;
  margin-bottom: var(--spacing-md);
}

/* Remove any conflicting checkbox label styles */
.checkboxLabel label {
  color: var(--label-color) !important;
}

/* Add these styles to your existing Form.module.css */
.checkboxContainer {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  margin-bottom: 0; /* Remove margin since grid handles spacing */
}

.infoIcon {
  color: var(--text-secondary);
  cursor: pointer;
  opacity: 0.7;
  transition: opacity 0.2s ease;
  font-size: 0.9em;
  display: flex;
  align-items: center;
  height: 100%;
  padding-top: -1px;
  transform: translateY(-3px);
}

.infoIcon:hover {
  opacity: 1;
}

/* Style for Bootstrap Tooltip */
:global(.tooltip) {
  font-family: var(--system-font);
  font-size: calc(var(--font-xs) * 0.85);
  margin-right: 12px;
}

:global(.tooltip-inner) {
  background-color: var(--input-bg);
  color: var(--text-primary);
  border: 1px solid var(--border-color);
  padding: 10px 14px;
  max-width: 200px;
  text-align: left;
  line-height: 1.4;
}

/* Add this new style */
.labelContainer {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  margin-bottom: 4px;
}

/* Add these new styles */
.checkboxGrid {
  display: grid;
  grid-template-columns: repeat(2, 1fr);
  gap: 0.5rem 1rem;
  width: 100%;
}

/* Update existing styles */
.checkboxContainer {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  margin-bottom: 0; /* Remove margin since grid handles spacing */
}

.checkboxLabel {
  font-size: calc(var(--font-xs) * 0.95);
  color: var(--label-color);
  margin: 0;
  padding: 0;
}

/* Add these styles for checkbox background color */
.checkboxLabel input[type="checkbox"] {
  background-color: var(--input-bg) !important;
  border-color: var(--border-color) !important;
}

/* Style for checked state in dark mode */
:global(.dark-mode) .checkboxLabel input[type="checkbox"] {
  background-color: var(--input-bg) !important;
  border-color: var(--border-color) !important;
}

/* Style for checked state */
.checkboxLabel input[type="checkbox"]:checked {
  background-color: var(--link-color) !important;
  border-color: var(--link-color) !important;
}

/* Override any Bootstrap form control widths */
:global(.form-control).numberControl {
  width: 70px !important;
  min-width: 70px !important;
  max-width: 70px !important;
}

/* Add this new style */
.anxietyLevel {
  background-color: var(--input-bg);
  color: var(--text-secondary);
  font-size: calc(var(--font-xs) * 0.9);
  padding: 2px 6px;
  border-radius: 4px;
  font-weight: 500;
  letter-spacing: 0.5px;
  border: 1px solid var(--border-color);
  text-transform: uppercase;
  line-height: 1;
  transform: translateY(-2px);
  display: inline-flex;
  align-items: center;
}

.timeAirportContainer {
  display: flex;
  gap: 1rem;
  width: 100%;
  align-items: flex-start; /* Align inputs at the top */
}

.halfWidth {
  flex: 1;
  max-width: 50%;
  display: flex;
  flex-direction: column;
}

.halfWidth > label {
  margin-bottom: 4px;
}

/* If you don't already have these styles, add them too */
.timeInput {
  width: 100%;
  padding: 0.5rem;
  border: 1px solid #ccc;
  border-radius: 4px;
  font-size: 1rem;
}

.autocompleteWrapper {
  position: relative;
  width: 100%;
}

.suggestionsList {
  position: absolute;
  top: 100%;
  left: 0;
  right: 0;
  z-index: 1000;
  background-color: var(--bg-secondary);
  border: 1px solid var(--border-color);
  border-radius: 4px;
  max-height: 200px;
  overflow-y: auto;
  margin-top: 4px;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
  font-size: 0.8em;
}

.suggestionItem {
  padding: 6px 12px;
  cursor: pointer;
  border-bottom: 1px solid var(--border-color);
  color: var(--input-text);
  background-color: var(--bg-secondary);
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  line-height: 1.2;
  display: block;
}

.suggestionItem:hover {
  background-color: var(--input-bg);
}

.suggestionItem.loading,
.suggestionItem.error {
  font-size: 0.8em;
  padding: 6px 12px;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

.formControl {
  width: 100%;
  padding: 8px 12px;
  border: 1px solid var(--border-color);
  border-radius: 4px;
  font-size: 16px !important; /* iOS minimum font size to prevent zoom */
  background-color: var(--input-bg);
  color: var(--input-text);
  -webkit-appearance: none; /* Remove iOS default styling */
  -webkit-text-size-adjust: 100%; /* Prevent iOS text size adjust */
  touch-action: manipulation; /* Prevent double-tap zoom */
}

.airportCode {
  font-weight: 500;
  color: var(--input-text);
  font-size: 0.8em;
  flex-shrink: 0;
}

.airportName {
  font-size: 0.72em;
  color: var(--label-color);
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  max-width: 200px;
}

.loading {
  position: relative;
  opacity: 0.7;
  pointer-events: none;
}

.loadingSpinner {
  position: absolute;
  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%);
  width: 20px;
  height: 20px;
  border: 2px solid rgba(0, 0, 0, 0.1);
  border-left-color: #007bff;
  border-radius: 50%;
  animation: spin 1s linear infinite;
}

@keyframes spin {
  to {
    transform: translate(-50%, -50%) rotate(360deg);
  }
}

/* Make the input look disabled when loading */
.loading .numberControl,
.loading .decrementButton,
.loading .incrementButton {
  opacity: 0.7;
  cursor: not-allowed;
}

.airportDistance {
  color: var(--label-color);
  font-size: 0.9em;
  opacity: 0.8;
}

.inputError {
  border-color: #dc3545 !important;
}

.errorMessage {
  color: #dc3545;
  font-size: 0.8em;
  margin-top: 4px;
  padding: 4px 8px;
  background-color: rgba(220, 53, 69, 0.1);
  border-radius: 4px;
}

.timeInput {
  /* ... existing styles ... */
  -webkit-appearance: none; /* Remove iOS default styling */
  -webkit-tap-highlight-color: transparent;
  cursor: pointer;
}

/* Add meta viewport rules to prevent zooming */
@viewport {
  width: device-width;
  zoom: 1;
  min-zoom: 1;
  max-zoom: 1;
  user-zoom: fixed;
}

/* Prevent zoom on iOS focus */
input[type="text"],
input[type="number"],
input[type="email"],
input[type="tel"],
input[type="search"],
select,
textarea {
  font-size: 16px !important; /* iOS minimum font size to prevent zoom */
  max-height: 100%;
  -webkit-text-size-adjust: 100%;
  -webkit-tap-highlight-color: transparent;
}

.suggestionItem {
  padding: 6px 12px;
  cursor: pointer;
  border-bottom: 1px solid var(--border-color);
  color: var(--input-text);
  background-color: var(--bg-secondary);
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  line-height: 1.2;
  display: block;
  font-size: 16px !important; /* Match input font size */
  touch-action: manipulation;
}

/* Ensure all inputs have the same effective height including borders */
.timeInput,
.formControl,
.numberControl {
  box-sizing: border-box;
  min-height: var(--input-height, 38px);
  max-height: var(--input-height, 38px);
}

/* Airport input */
.formControl {
  composes: inputBase;
  height: 38px !important;
  line-height: 36px !important;
  padding: 0 0.75rem !important;
  margin: 0 !important;
  box-sizing: border-box !important;
}

/* Number input */
.numberControl {
  composes: inputBase;
  width: 70px !important;
  min-width: 70px !important;
  max-width: 70px !important;
  text-align: center;
  padding: 0 0.25rem !important;
}

/* Remove any Bootstrap overrides */
input.formControl {
  height: 38px !important;
  min-height: 38px !important;
  max-height: 38px !important;
}

/* Ensure consistent height across all browsers */
.timeInput,
.formControl,
.numberControl {
  height: 38px !important;
  min-height: 38px !important;
  max-height: 38px !important;
  box-sizing: border-box !important;
}

/* Base number input styles */
.numberInputBase {
  composes: inputBase;
  width: 70px !important;
  min-width: 70px !important;
  max-width: 70px !important;
  text-align: center !important;
  padding: 0 !important; /* Remove padding to ensure perfect centering */
  -moz-appearance: textfield !important; /* Firefox */
}

/* Remove spinner buttons in Chrome/Safari/Edge */
.numberInputBase::-webkit-outer-spin-button,
.numberInputBase::-webkit-inner-spin-button {
  -webkit-appearance: none;
  margin: 0;
}

/* Apply the base styles to number control */
.numberControl {
  composes: numberInputBase;
  color: var(--input-text-secondary) !important;
}

/* Ensure Bootstrap doesn't override our styles */
input[type="number"].numberControl {
  text-align: center !important;
  padding: 0 !important;
}

/* Force center alignment in all browsers */
.numberInputContainer input {
  text-align: center !important;
  padding: 0 !important;
}

.checkboxGroupsContainer {
  display: grid;
  grid-template-columns: 1fr 1fr;
  gap: 1rem;
  width: 100%;
}

.checkboxGroup {
  background: var(--bg-secondary);
  border: 1px solid var(--border-color);
  border-radius: 8px;
  padding: 12px;
}

.checkboxGroupTitle {
  font-size: 0.75rem;
  text-transform: uppercase;
  color: var(--label-color);
  margin-bottom: 8px;
  letter-spacing: 0.5px;
  font-weight: 500;
}

.checkboxGrid {
  display: flex;
  flex-direction: column;
  gap: 0.5rem;
}
